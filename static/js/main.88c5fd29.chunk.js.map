{"version":3,"sources":["Theme/GlobalStyle.js","Theme/Themes.js","Components/styledComponents.js","Components/CurrencyList/CurrencyRow.jsx","Components/CurrencyList/CurrencyList.jsx","Components/Converter/Converter.jsx","api/api.js","Theme/toogle.js","App.js","Theme/useDarkMode.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","text","lightTheme","body","background","AppComponent","Paper","OpacityNegative","OpacityPositive","darkTheme","styled","div","AppInner","ToggleComponent","ToggleOuter","ConverterOuter","ConverterComponent","ConverterRow","OpacityComponent","tr","Img","img","PriceCellInner","ArrowIcon","i","CurrencyListComponent","PriceCell","price","fakePrice","TableCell","align","className","CurrencyRow","triggerPositive","triggerNegative","classes","crypto","imitatePrice","React","useState","triggerOpacity","setTriggerOpacity","useEffect","setTimeout","TableRow","component","style","position","src","imageUrl","alt","name","symbol","marketCap","useStyles","makeStyles","table","minWidth","CurrencyList","props","setImitatePrice","length","amountRows","Math","floor","random","newRandomPrice","randomRow","part","randomPrice","toFixed","parseFloat","TableContainer","Table","aria-label","size","TableHead","TableBody","map","id","key","input","marginRight","spacing","maxWidth","formControl","cash","toMenuItem","MenuItem","value","Converter","firstSelect","setFirstSelect","firstValue","setFirstValue","secondSelect","setSecondSelect","secondValue","setSecondValue","hashTable","setHashTable","isFirstEdit","setIsFirstEdit","setFirstRow","setSecondRow","swapRowsValues","tempValue","tempSelect","array","obj","coin","createHashCurrency","cashPrice","cryptoPrice","secondPrice","firstPrice","SelectElements","cryptoSel","cashSel","createSelect","TextField","onChange","event","target","variant","FormControl","Select","instance","axios","create","baseURL","headers","authorization","apiCrypto","get","then","data","Toggle","toggleTheme","isDark","Switch","checked","createCoin","CoinInfo","Id","FullName","ImageUrl","Internal","RAW","USD","PRICE","DISPLAY","MKTCAP","darkThemeMui","createMuiTheme","palette","type","App","cryptoData","setCryptoData","setTheme","setMode","mode","window","localStorage","setItem","localTheme","getItem","useDarkMode","themeToggler","themeMode","Data","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"yZACO,IAAMA,EAAeC,YAAH,KAEZ,qBAAGC,MAAkBC,QCHrBC,EAAa,CACtBC,KAAM,OACNF,KAAM,sBACNG,WAAY,UACZC,aAAc,UACdC,MAAO,OACPC,gBAAiB,UACjBC,gBAAiB,WAERC,EAAY,CACrBN,KAAM,UACNF,KAAM,UACNG,WAAY,OACZC,aAAc,UACdC,MAAO,UACPC,gBAAiB,UACjBC,gBAAiB,W,69FCbd,IAAMH,EAAeK,IAAOC,IAAV,KAIH,qBAAEX,MAAiBK,gBAE5BO,EAAWF,IAAOC,IAAV,KAKRL,EAAQI,IAAOC,IAAV,KAUI,qBAAEX,MAAiBM,SAQ5BO,EAAkBH,IAAOC,IAAV,KAQf,qBAAEX,MAAiBC,QAGnBa,EAAcJ,IAAOC,IAAV,KAOXI,EAAiBL,IAAOC,IAAV,KAQdK,EAAqBN,IAAOC,IAAV,KAUlBM,EAAeP,IAAOC,IAAV,KAMZO,EAAmBR,IAAOS,GAAV,KAML,qBAAEnB,MAAiBQ,mBAInB,qBAAER,MAAiBO,mBAG9Ba,EAAMV,IAAOW,IAAV,KAQHC,EAAiBZ,IAAOC,IAAV,KAOZ,qBAAEX,MAAiBC,QAGrBsB,EAAYb,IAAOc,EAAV,KAsBTC,EAAwBf,IAAOC,IAAV,K,8DCxH5Be,EAAY,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,UACvB,OACI,kBAACC,EAAA,EAAD,CAAWC,MAAM,QACb,kBAACR,EAAD,KACKM,EAAY,GAAK,kBAACL,EAAD,CAAWQ,UAAWH,EAAYD,EAAQ,KAAO,SACnE,8BAAOC,GAAaD,MAMvBK,EAAc,SAAC,GAA4B,IAEhDC,EACAC,EACAC,EAJqBC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aAAkB,EACPC,IAAMC,UAAS,GADR,mBAC5CC,EAD4C,KAC5BC,EAD4B,KA0BnD,OApBAH,IAAMI,WAAU,WACRL,IAAiBD,EAAOT,QACxBc,GAAkB,GAElBE,YAAW,WACPF,GAAkB,KACnB,QAER,CAACL,EAAQC,IAERG,IACIH,EAAeD,EAAOT,MACtBM,EAAkB,yBACXI,EAAeD,EAAOT,OAA0B,IAAjBU,IACtCH,EAAkB,2BAI1BC,EAAO,sBAAkBF,GAAmBC,GAAmB,IAG3D,kBAACU,EAAA,EAAD,CAAUb,UAAWI,EAASU,UAAW3B,GACrC,kBAACW,EAAA,EAAD,CAAWC,MAAM,SAASgB,MAAO,CAACC,SAAU,aACxC,kBAAC3B,EAAD,CAAK4B,IAAKZ,EAAOa,SAAUC,IAAI,YAEnC,kBAACrB,EAAA,EAAD,KAAYO,EAAOe,MACnB,kBAACtB,EAAA,EAAD,KAAYO,EAAOgB,QACnB,kBAAC,EAAD,CAAWzB,MAAOS,EAAOT,MAAOC,UAAWS,IAC3C,kBAACR,EAAA,EAAD,CAAWC,MAAM,UAAUM,EAAOiB,a,kBCvCxCC,EAAYC,aAAW,SAACvD,GAAD,MAAY,CACrCwD,MAAO,CACHC,SAAU,SAKLC,EAAe,SAACC,GAAW,IAAD,EACKrB,IAAMC,SAAS,IADpB,mBAC5BF,EAD4B,KACduB,EADc,KAG7BzB,EAAUmB,IAkBhB,OAhBAhB,IAAMI,WAAU,WACRiB,EAAMvB,OAAOyB,QACblB,YAAW,WAGP,IAFA,IAAMmB,EAAaC,KAAKC,MAAMD,KAAKE,UAAYN,EAAMvB,OAAOyB,OAAS,IACjEK,EAAc,eAAO7B,GAChBb,EAAI,EAAGA,GAAKsC,EAAYtC,IAAK,CAClC,IAAM2C,EAAYJ,KAAKC,MAAMD,KAAKE,SAAYN,EAAMvB,OAAOyB,QACrDO,EAAOT,EAAMvB,OAAO+B,GAAWxC,MAAQ,IACvC0C,GAAeV,EAAMvB,OAAO+B,GAAWxC,OAASoC,KAAKE,SAAWG,EAAOA,EAAO,IAAIE,QAAQ,GAChGJ,EAAeC,GAAaI,WAAWF,GAE3CT,EAAgBM,KACjBH,KAAKC,MAAsB,KAAhBD,KAAKE,SAAkB,QAE1C,CAAC5B,EAAcsB,EAAMvB,SAGpB,kBAACX,EAAD,KACI,kBAAC+C,EAAA,EAAD,CAAgB3B,UAAWvC,KACvB,kBAACmE,EAAA,EAAD,CAAOC,aAAW,eAAeC,KAAK,QAAQ5C,UAAWI,EAAQqB,OAC7D,kBAACoB,EAAA,EAAD,KACI,kBAAChC,EAAA,EAAD,KACI,kBAACf,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,qBAGR,kBAACgD,EAAA,EAAD,KACKlB,EAAMvB,OAAO0C,KAAI,SAAC1C,EAAQ2C,GAAT,OACd,kBAAC,EAAD,CAAaC,IAAK5C,EAAO2C,GAAI3C,OAAQA,EAAQC,aAAcA,EAAa0C,a,yDC9C9FzB,GAAYC,aAAW,SAACvD,GAAD,MAAY,CACrCiF,MAAO,CACHC,YAAalF,EAAMmF,QAAQ,GAC3BC,SAAU,KAEdC,YAAa,CACT5B,SAAU,QAKZ6B,GAAO,CACT,CAACP,GAAI,EAAG3B,OAAQ,MAAOzB,MAAO,IAGlC,SAAS4D,GAAT,GAA0C,IAArBR,EAAoB,EAApBA,GAAI3B,EAAgB,EAAhBA,OAAQzB,EAAQ,EAARA,MAC7B,OAAO,kBAAC6D,GAAA,EAAD,CAAUR,IAAKD,EAAIpD,MAAOA,EAAO8D,MAAOrC,GAAxC,IAAkDA,EAAlD,KA2BJ,IAAMsC,GAAY,SAAC/B,GACtB,IAAMxB,EAAUmB,KADgB,EAGMhB,IAAMC,SAAS,IAHrB,mBAGzBoD,EAHyB,KAGZC,EAHY,OAIItD,IAAMC,SAAS,GAJnB,mBAIzBsD,EAJyB,KAIbC,EAJa,OAMQxD,IAAMC,SAAS,IANvB,mBAMzBwD,EANyB,KAMXC,EANW,OAOM1D,IAAMC,SAAS,GAPrB,mBAOzB0D,EAPyB,KAOZC,EAPY,OASE5D,IAAMC,SAAS,IATjB,mBASzB4D,EATyB,KASdC,EATc,OAUM9D,IAAMC,UAAS,GAVrB,mBAUzB8D,EAVyB,KAUZC,EAVY,KAY1BC,EAAc,SAACnD,EAAQzB,GACzBiE,EAAexC,GACf0C,EAAcnE,IAGZ6E,EAAe,SAACpD,EAAQzB,GAC1BqE,EAAgB5C,GAChB8C,EAAevE,IAGb8E,EAAiB,WACnB,IAAMC,EAAYb,EACZc,EAAahB,EAEnBG,EAAcG,GACdL,EAAeG,GAEfC,EAAgBW,GAChBT,EAAeQ,IA8BnBpE,IAAMI,WAAU,WACRiB,EAAMvB,OAAOyB,QACbuC,EAxEZ,SAA4BQ,GACxB,IAD+B,EAC3BC,EAAM,GADqB,cAGdD,GAHc,IAG/B,2BAAwB,CAAC,IAAhBE,EAAe,QACpBD,EAAIC,EAAK1D,QAAU,CAACzB,MAAOmF,EAAKnF,QAJL,8BAO/B,OAAOkF,EAiEcE,CAAmB,GAAD,OAAKzB,GAAL,aAAc3B,EAAMvB,aAExD,CAACuB,EAAMvB,SAEVE,IAAMI,WAAU,WACZ,GAAIiB,EAAMvB,OAAOyB,OAAQ,CACrB,IAAMmD,EAAYb,EAAUb,GAAK,GAAGlC,QAAQzB,MACtCsF,EAAcd,EAAUxC,EAAMvB,OAAO,GAAGgB,QAAQzB,MAEtD4E,EAAYjB,GAAK,GAAGlC,OAAQ4D,EAAYC,GACxCT,EAAa7C,EAAMvB,OAAO,GAAGgB,OAAQ,MAE1C,CAAC+C,IAGJ7D,IAAMI,WAAU,WACZ,GAAIiB,EAAMvB,OAAOyB,OAAQ,CACrB,IAAMqD,EAAcf,EAAUJ,GAAcpE,MACtCwF,EAAahB,EAAUR,GAAahE,MAE1C,GAAI0E,EAEAH,GADcL,EAAasB,EAAcD,GACnB5C,QAAQ,SAG9BwB,EAAcvB,YADE0B,EAAciB,EAAeC,GACb7C,QAAQ,QAGjD,CAACuB,EAAYI,EAAaI,IAG7B,IAAIe,EArHR,SAAsBhF,EAAQkD,GAC1B,IAAI+B,EAAY,GACZC,EAAU,GASd,OAPA,OAAIlF,QAAJ,IAAIA,OAAJ,EAAIA,EAAQyB,UACRwD,EAAYjF,EAAO0C,IAAIS,MAE3B,OAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAMzB,UACNyD,EAAUhC,EAAKR,IAAIS,KAGjB,GAAN,oBAAW+B,GAAX,aAAuBD,IA0GFE,CAAa5D,EAAMvB,OAAQkD,IAEhD,OACI,kBAACvE,EAAD,KACI,kBAACC,EAAD,KACI,kBAACC,EAAD,KACI,kBAACuG,GAAA,EAAD,CAAWzF,UAAWI,EAAQ8C,MACnBQ,MAAOI,EACP4B,SApDI,SAACC,GAC5BpB,GAAe,GACfR,EAAc4B,EAAMC,OAAOlC,QAmDJmC,QAAQ,aAEnB,kBAACC,GAAA,EAAD,CAAaD,QAAQ,WAAW7F,UAAWI,EAAQkD,aAC/C,kBAACyC,GAAA,EAAD,CAAQrC,MAAOE,EAAa8B,SAxEhB,SAACC,GAC7B,IAAMtE,EAASsE,EAAMC,OAAOlC,MACxBrC,IAAW2C,GACXU,IAEJF,EAAYnD,EAAQ,KAoECgE,KAIb,kBAACnG,EAAD,KACI,kBAACuG,GAAA,EAAD,CAAWzF,UAAWI,EAAQ8C,MACnBQ,MAAOQ,EACPwB,SA3DK,SAACC,GAC7BpB,GAAe,GACfJ,EAAewB,EAAMC,OAAOlC,QA0DLmC,QAAQ,aAEnB,kBAACC,GAAA,EAAD,CAAaD,QAAQ,WAAW7F,UAAWI,EAAQkD,aAC/C,kBAACyC,GAAA,EAAD,CAAQrC,MAAOM,EAAc0B,SA5EhB,SAACC,GAC9B,IAAMtE,EAASsE,EAAMC,OAAOlC,MACxBrC,IAAWuC,GACXc,IAEJD,EAAapD,EAAQ,KAwEAgE,Q,SCxKvBW,G,QAAWC,EAAMC,OAAO,CAC1BC,QAAS,0CACTC,QAAS,CACLC,cAAe,6EAIVC,GAAY,WAEjB,OAAON,GAASO,IAAT,oCAAiDC,MAAK,qBAAEC,S,6BCIxDC,GAXO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,OACjC,OACI,kBAAC7H,EAAD,KACI,kBAACD,EAAD,KACI,kBAAC+H,GAAA,EAAD,CAAQnB,SAAUiB,EAAaG,QAASF,IACxC,gDCgBhB,SAASG,GAAWhC,GAChB,MAAO,CACH/B,GAAI+B,EAAKiC,SAASC,GAClB7F,KAAM2D,EAAKiC,SAASE,SACpBhG,SAAS,gCAAD,OAAkC6D,EAAKiC,SAASG,UACxD9F,OAAQ0D,EAAKiC,SAASI,SACtBxH,OAAQmF,EAAKsC,IAAIC,IAAIC,MAAMhF,QAAQ,GACnCjB,UAAWyD,EAAKyC,QAAQF,IAAIG,QAIpC,IAAMC,GAAeC,aAAe,CAChCC,QAAS,CACLC,KAAM,UAmCCC,OA/Bf,WAAgB,IAAD,EACyBtH,mBAAS,IADlC,mBACJuH,EADI,KACQC,EADR,OC1CY,WAAO,IAAD,EACHxH,mBAAS,SADN,mBACtBvC,EADsB,KACfgK,EADe,KAGvBC,EAAU,SAAAC,GACZC,OAAOC,aAAaC,QAAQ,QAASH,GACrCF,EAASE,IAWb,OAJAxH,qBAAU,WACN,IAAM4H,EAAaH,OAAOC,aAAaG,QAAQ,SAC/CD,GAAcN,EAASM,KACxB,IACI,CAACtK,EARa,WACGiK,EAAV,UAAVjK,EAA4B,OAAkB,WDoCpBwK,GAHnB,mBAGJxK,EAHI,KAGGyK,EAHH,KAILC,EAAsB,UAAV1K,EAAoBE,EAAaO,EASnD,OAPAiC,qBAAU,WACN2F,KAA2BE,MAAK,YAAa,IACnCnG,EADkC,EAAVuI,KACV7F,IAAIgE,IACxBiB,EAAc3H,QAEnB,IAGC,kBAAC,IAAD,CAAepC,MAAO0K,GAClB,kBAACE,GAAA,EAAD,CAAkB5K,MAAiB,UAAVA,EAAoB,KAAOyJ,IAChD,kBAAC3J,EAAD,MACA,kBAACO,EAAD,KACI,kBAACO,EAAD,KACI,kBAACN,EAAD,KACI,kBAAC,GAAD,CAAQoI,YAAa+B,EAAc9B,OAAkB,SAAV3I,IAC3C,kBAAC,GAAD,CAAWoC,OAAQ0H,IACnB,kBAAC,EAAD,CAAc1H,OAAQ0H,UEzDlDe,IAASC,OAAO,kBAAC,GAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.88c5fd29.chunk.js","sourcesContent":["import { createGlobalStyle} from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n    transition: all 0.50s linear;\r\n  }\r\n  `\r\n","export const lightTheme = {\r\n    body: '#FFF',\r\n    text: 'rgba(0, 0, 0, 0.87)',\r\n    background: '#363537',\r\n    AppComponent: '#EBEBEB',\r\n    Paper: '#fff',\r\n    OpacityNegative: '#fde2e2',\r\n    OpacityPositive: '#dbffe4'\r\n}\r\nexport const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    background: '#999',\r\n    AppComponent: '#212121',\r\n    Paper: '#6b6b6b',\r\n    OpacityNegative: '#794646',\r\n    OpacityPositive: '#467952'\r\n}\r\n","import styled from \"styled-components\";\r\n\r\n// --- App\r\nexport const AppComponent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px;\r\n  background-color: ${({theme}) => theme.AppComponent};\r\n`\r\nexport const AppInner = styled.div`\r\n  height: fit-content;\r\n  width: fit-content;\r\n  margin: auto auto 0;\r\n`\r\nexport const Paper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 8px;\r\n  padding: 15px;\r\n  position:relative;\r\n  display:flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  background-color: ${({theme}) => theme.Paper};\r\n  box-shadow: 0 3px 3px -2px rgba(0,0,0,0.2), \r\n              0px 3px 4px 0px rgba(0,0,0,0.14), \r\n              0px 1px 8px 0px rgba(0,0,0,0.12);\r\n  border-radius: 4px;\r\n  justify-content: space-between;\r\n`\r\n// --- Toogle\r\nexport const ToggleComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  \r\n  & > span {\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: ${({theme}) => theme.text}\r\n  }\r\n`\r\nexport const ToggleOuter = styled.div`\r\n   position: absolute;\r\n   right: 0;\r\n   top: 0;\r\n   padding: 10px;\r\n`\r\n// --- Converter\r\nexport const ConverterOuter = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 25px;\r\n  display:flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`\r\nexport const ConverterComponent = styled.div`\r\n  height: 200px;\r\n  width: fit-content;\r\n  border: 1px solid #cdcdcd;\r\n  border-radius: 6px;\r\n  padding: 15px;\r\n  display:flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n`\r\nexport const ConverterRow = styled.div`\r\n  display:flex;\r\n  justify-content: space-between;\r\n`\r\n\r\n// --- CurrencyRow\r\nexport const OpacityComponent = styled.tr`\r\n  .initOpacity {\r\n    transition: all linear 300ms;\r\n  }\r\n\r\n  &.triggerOpacityPositive {\r\n    background-color: ${({theme}) => theme.OpacityPositive};\r\n  }\r\n\r\n  &.triggerOpacityNegative {\r\n    background-color: ${({theme}) => theme.OpacityNegative};\r\n  }\r\n`\r\nexport const Img = styled.img`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 24px;\r\n  border-radius: 30px;\r\n  transition: transform;\r\n`\r\nexport const PriceCellInner = styled.div`\r\n  display:flex;\r\n  align-items: center;\r\n  position: relative;\r\n  padding-left: 18px;\r\n  \r\n  & > span {\r\n      color: ${({theme}) => theme.text}\r\n  }\r\n`\r\nexport const ArrowIcon = styled.i`\r\n    position: absolute;\r\n    left: 0;\r\n    border: solid black;\r\n    border-width: 0 3px 3px 0;\r\n    display: inline-block;\r\n    padding: 3px;\r\n    transition: transform ease-in 250ms;\r\n    \r\n    &.up {\r\n        transform: rotate(-135deg);\r\n        border-color: #00bf00;\r\n        -webkit-transform: rotate(-135deg);\r\n    }\r\n\r\n    &.down {\r\n        transform: rotate(45deg);\r\n        border-color: #bf0000;\r\n        -webkit-transform: rotate(45deg);\r\n    }\r\n`\r\n// --- CurrencyList\r\nexport const CurrencyListComponent = styled.div`\r\n  width: 100%;\r\n  border: 1px solid #cdcdcd;\r\n  border-radius: 6px;\r\n`","import React from 'react';\r\n\r\nimport {PriceCellInner, Img, OpacityComponent, ArrowIcon} from \"../styledComponents\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\n\r\nconst PriceCell = ({price, fakePrice}) => {\r\n    return (\r\n        <TableCell align=\"left\">\r\n            <PriceCellInner>\r\n                {fakePrice > 0 && <ArrowIcon className={fakePrice > price ? \"up\" : \"down\"}/>}\r\n                <span>{fakePrice || price}</span>\r\n            </PriceCellInner>\r\n        </TableCell>\r\n    )\r\n}\r\n\r\nexport const CurrencyRow = ({crypto, imitatePrice}) => {\r\n    const [triggerOpacity, setTriggerOpacity] = React.useState(false)\r\n    let triggerPositive\r\n    let triggerNegative\r\n    let classes\r\n\r\n    React.useEffect(() => {\r\n        if (imitatePrice !== crypto.price) {\r\n            setTriggerOpacity(true)\r\n\r\n            setTimeout(() => {\r\n                setTriggerOpacity(false)\r\n            }, 600)\r\n        }\r\n    }, [crypto, imitatePrice])\r\n\r\n    if (triggerOpacity) {\r\n        if (imitatePrice > crypto.price) {\r\n            triggerPositive = \"triggerOpacityPositive\"\r\n        } else if (imitatePrice < crypto.price && imitatePrice !== 0) {\r\n            triggerNegative = \"triggerOpacityNegative\"\r\n        }\r\n    }\r\n\r\n    classes = `initOpacity ${triggerPositive || triggerNegative || \"\"}`\r\n\r\n    return (\r\n        <TableRow className={classes} component={OpacityComponent}>\r\n            <TableCell align=\"center\" style={{position: \"relative\"}}>\r\n                <Img src={crypto.imageUrl} alt=\"crypto\"/>\r\n            </TableCell>\r\n            <TableCell>{crypto.name}</TableCell>\r\n            <TableCell>{crypto.symbol}</TableCell>\r\n            <PriceCell price={crypto.price} fakePrice={imitatePrice}/>\r\n            <TableCell align=\"center\">{crypto.marketCap}</TableCell>\r\n        </TableRow>\r\n    )\r\n};","import React from 'react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {CurrencyRow} from \"./CurrencyRow\";\r\nimport {CurrencyListComponent} from \"../styledComponents\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 550\r\n    }\r\n}));\r\n\r\n\r\nexport const CurrencyList = (props) => {\r\n    const [imitatePrice, setImitatePrice] = React.useState({})\r\n\r\n    const classes = useStyles()\r\n\r\n    React.useEffect(() => {\r\n        if (props.crypto.length) {\r\n            setTimeout(() => {\r\n                const amountRows = Math.floor(Math.random() * (props.crypto.length / 2))\r\n                let newRandomPrice = {...imitatePrice}\r\n                for (let i = 0; i <= amountRows; i++) {\r\n                    const randomRow = Math.floor(Math.random() * (props.crypto.length))\r\n                    const part = props.crypto[randomRow].price / 100\r\n                    const randomPrice = (props.crypto[randomRow].price + (Math.random() * part - part / 2)).toFixed(3)\r\n                    newRandomPrice[randomRow] = parseFloat(randomPrice)\r\n                }\r\n                setImitatePrice(newRandomPrice)\r\n            }, Math.floor(Math.random() * 3500 + 1000))\r\n        }\r\n    }, [imitatePrice, props.crypto])\r\n\r\n    return (\r\n        <CurrencyListComponent>\r\n            <TableContainer component={Paper} >\r\n                <Table aria-label=\"simple table\" size=\"small\" className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell/>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Symbol</TableCell>\r\n                            <TableCell>Price (USD)</TableCell>\r\n                            <TableCell>Market Cap</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.crypto.map((crypto, id) => (\r\n                            <CurrencyRow key={crypto.id} crypto={crypto} imitatePrice={imitatePrice[id]}/>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </CurrencyListComponent>\r\n    )\r\n};","import React from \"react\";\r\n\r\n\r\nimport {ConverterComponent, ConverterOuter, ConverterRow} from \"../styledComponents\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        marginRight: theme.spacing(4),\r\n        maxWidth: 150\r\n    },\r\n    formControl: {\r\n        minWidth: 90\r\n    },\r\n}));\r\n\r\n\r\nconst cash = [\r\n    {id: 1, symbol: \"USD\", price: 1}\r\n]\r\n\r\nfunction toMenuItem({id, symbol, price}) {\r\n    return <MenuItem key={id} price={price} value={symbol}> {symbol} </MenuItem>\r\n}\r\n\r\nfunction createSelect(crypto, cash) {\r\n    let cryptoSel = []\r\n    let cashSel = []\r\n\r\n    if (crypto?.length) {\r\n        cryptoSel = crypto.map(toMenuItem)\r\n    }\r\n    if (cash?.length) {\r\n        cashSel = cash.map(toMenuItem)\r\n    }\r\n\r\n    return [...cashSel, ...cryptoSel]\r\n}\r\n\r\nfunction createHashCurrency(array) {\r\n    let obj = {}\r\n\r\n    for (let coin of array) {\r\n        obj[coin.symbol] = {price: coin.price}\r\n    }\r\n\r\n    return obj\r\n}\r\n\r\nexport const Converter = (props) => {\r\n    const classes = useStyles();\r\n    //upRow\r\n    const [firstSelect, setFirstSelect] = React.useState('')\r\n    const [firstValue, setFirstValue] = React.useState(0)\r\n    //downRow\r\n    const [secondSelect, setSecondSelect] = React.useState('')\r\n    const [secondValue, setSecondValue] = React.useState(0)\r\n\r\n    const [hashTable, setHashTable] = React.useState({})\r\n    const [isFirstEdit, setIsFirstEdit] = React.useState(false)\r\n\r\n    const setFirstRow = (symbol, price) => {\r\n        setFirstSelect(symbol)\r\n        setFirstValue(price)\r\n    }\r\n\r\n    const setSecondRow = (symbol, price) => {\r\n        setSecondSelect(symbol)\r\n        setSecondValue(price)\r\n    }\r\n\r\n    const swapRowsValues = () => {\r\n        const tempValue = firstValue\r\n        const tempSelect = firstSelect\r\n\r\n        setFirstValue(secondValue)\r\n        setFirstSelect(secondSelect)\r\n\r\n        setSecondSelect(tempSelect)\r\n        setSecondValue(tempValue)\r\n    }\r\n\r\n    const handleChangeFirstSelect = (event) => {\r\n        const symbol = event.target.value\r\n        if (symbol === secondSelect) {\r\n            swapRowsValues()\r\n        }\r\n        setFirstRow(symbol, 1)\r\n    };\r\n\r\n    const handleChangeSecondSelect = (event) => {\r\n        const symbol = event.target.value\r\n        if (symbol === firstSelect) {\r\n            swapRowsValues()\r\n        }\r\n        setSecondRow(symbol, 1)\r\n    };\r\n\r\n    const handleChangeFirstInput = (event) => {\r\n        setIsFirstEdit(true)\r\n        setFirstValue(event.target.value)\r\n    }\r\n\r\n    const handleChangeSecondInput = (event) => {\r\n        setIsFirstEdit(false)\r\n        setSecondValue(event.target.value)\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (props.crypto.length) {\r\n            setHashTable(createHashCurrency([...cash, ...props.crypto]))\r\n        }\r\n    }, [props.crypto])\r\n\r\n    React.useEffect(() => {\r\n        if (props.crypto.length) {\r\n            const cashPrice = hashTable[cash[0].symbol].price\r\n            const cryptoPrice = hashTable[props.crypto[0].symbol].price\r\n\r\n            setFirstRow(cash[0].symbol, cashPrice * cryptoPrice)\r\n            setSecondRow(props.crypto[0].symbol, 1)\r\n        }\r\n    }, [hashTable])\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (props.crypto.length) {\r\n            const secondPrice = hashTable[secondSelect].price\r\n            const firstPrice = hashTable[firstSelect].price\r\n\r\n            if (isFirstEdit) {\r\n                let amount = (firstValue * firstPrice) / secondPrice\r\n                setSecondValue(amount.toFixed(2))\r\n            } else {\r\n                const amount = (secondValue * secondPrice) / firstPrice\r\n                setFirstValue(parseFloat(amount.toFixed(3)))\r\n            }\r\n        }\r\n    }, [firstValue, secondValue, isFirstEdit])\r\n\r\n\r\n    let SelectElements = createSelect(props.crypto, cash)\r\n\r\n    return (\r\n        <ConverterOuter>\r\n            <ConverterComponent>\r\n                <ConverterRow>\r\n                    <TextField className={classes.input}\r\n                               value={firstValue}\r\n                               onChange={handleChangeFirstInput}\r\n                               variant=\"outlined\"\r\n                    />\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                        <Select value={firstSelect} onChange={handleChangeFirstSelect}>\r\n                            {SelectElements}\r\n                        </Select>\r\n                    </FormControl>\r\n                </ConverterRow>\r\n                <ConverterRow>\r\n                    <TextField className={classes.input}\r\n                               value={secondValue}\r\n                               onChange={handleChangeSecondInput}\r\n                               variant=\"outlined\"\r\n                    />\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                        <Select value={secondSelect} onChange={handleChangeSecondSelect}>\r\n                            {SelectElements}\r\n                        </Select>\r\n                    </FormControl>\r\n                </ConverterRow>\r\n            </ConverterComponent>\r\n        </ConverterOuter>\r\n    )\r\n};","import axios from \"axios\";\r\n//https://www.cryptocompare.com/cryptopian/api-keys\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://min-api.cryptocompare.com/data/\",\r\n    headers: {\r\n        authorization: \"Apikey d6b325a068ef7f9b96fe676ab17062e3c61b7067f01216793dc2a911cd279eec\"\r\n    }\r\n})\r\n\r\nexport const apiCrypto = {\r\n    getTopByMarket() {\r\n        return instance.get(`top/mktcapfull?limit=10&tsym=USD`).then(({data})=> data)\r\n    }\r\n}","import React from 'react'\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport {ToggleComponent, ToggleOuter} from \"../Components/styledComponents\";\r\n\r\n\r\nexport const Toggle = ({toggleTheme, isDark}) => {\r\n    return (\r\n        <ToggleOuter>\r\n            <ToggleComponent>\r\n                <Switch onChange={toggleTheme} checked={isDark}/>\r\n                <span> Dark Mode </span>\r\n            </ToggleComponent>\r\n        </ToggleOuter>\r\n    );\r\n};\r\n\r\nexport default Toggle;","import React, {useEffect, useState} from 'react';\n\nimport './App.css';\n\nimport {ThemeProvider} from \"styled-components\";\nimport {GlobalStyles} from \"./Theme/GlobalStyle\";\nimport {lightTheme, darkTheme} from \"./Theme/Themes\"\nimport {useDarkMode} from \"./Theme/useDarkMode\"\n\nimport {AppComponent, AppInner, Paper} from \"./Components/styledComponents\";\nimport {CurrencyList} from \"./Components/CurrencyList\";\nimport {Converter} from \"./Components/Converter\";\nimport {apiCrypto} from \"./api/api\";\n\nimport {ThemeProvider as ThemeProviderMui} from \"@material-ui/styles\"\nimport {createMuiTheme} from \"@material-ui/core\";\nimport Toggle from \"./Theme/toogle\";\n\n/**\n * @property {Number} coin.CoinInfo.Id\n * @property {String} coin.CoinInfo.ImageUrl\n * @property {String} coin.CoinInfo.Internal\n * @property {Number} coin.RAW.USD.PRICE\n * @property {Number} coin.DISPLAY.USD.MKTCAP\n * */\n\nfunction createCoin(coin) {\n    return {\n        id: coin.CoinInfo.Id,\n        name: coin.CoinInfo.FullName,\n        imageUrl: `https://www.cryptocompare.com${coin.CoinInfo.ImageUrl}`,\n        symbol: coin.CoinInfo.Internal,\n        price: +coin.RAW.USD.PRICE.toFixed(3),\n        marketCap: coin.DISPLAY.USD.MKTCAP\n    }\n}\n\nconst darkThemeMui = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n});\n\nfunction App() {\n    const [cryptoData, setCryptoData] = useState([])\n\n    const [theme, themeToggler] = useDarkMode();\n    const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n    useEffect(() => {\n        apiCrypto.getTopByMarket().then(({Data}) => {\n            const crypto = Data.map(createCoin)\n            setCryptoData(crypto)\n        })\n    }, [])\n\n    return (\n        <ThemeProvider theme={themeMode}>\n            <ThemeProviderMui theme={theme === 'light' ? null : darkThemeMui}>\n                <GlobalStyles/>\n                <AppComponent>\n                    <AppInner>\n                        <Paper>\n                            <Toggle toggleTheme={themeToggler} isDark={theme === 'dark'}/>\n                            <Converter crypto={cryptoData}/>\n                            <CurrencyList crypto={cryptoData}/>\n                        </Paper>\n                    </AppInner>\n                </AppComponent>\n            </ThemeProviderMui>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\r\nexport const useDarkMode = () => {\r\n    const [theme, setTheme] = useState('light');\r\n\r\n    const setMode = mode => {\r\n        window.localStorage.setItem('theme', mode)\r\n        setTheme(mode)\r\n    };\r\n\r\n    const themeToggler = () => {\r\n        theme === 'light' ? setMode('dark') : setMode('light')\r\n    };\r\n\r\n    useEffect(() => {\r\n        const localTheme = window.localStorage.getItem('theme');\r\n        localTheme && setTheme(localTheme)\r\n    }, []);\r\n    return [theme, themeToggler]\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './App';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n"],"sourceRoot":""}